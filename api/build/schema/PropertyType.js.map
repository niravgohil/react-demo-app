{"version":3,"sources":["../../src/schema/PropertyType.js"],"names":["PropertyType","GraphQLObjectType","name","interfaces","nodeInterface","fields","id","livingSurface","type","GraphQLFloat","resolve","parent","living_surface","createdAt","GraphQLDateTime","created_at","updatedAt","updated_at","landSurface","land_surface","numberOfRooms","number_of_rooms","numberOfParkings","GraphQLInt","number_of_parkings"],"mappings":";;AAEA;AACA;;AAEA;AACA;;AAEO,MAAMA,YAAY,GAAG,IAAIC,0BAAJ,CAAsB;AAChDC,EAAAA,IAAI,EAAE,UAD0C;AAEhDC,EAAAA,UAAU,EAAE,MAAM,CAACC,mBAAD,CAF8B;AAGhDC,EAAAA,MAAM,EAAE,OAAO;AACbC,IAAAA,EAAE,EAAE,kCADS;;AAGbC,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAEC,qBADO;AAEbC,MAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACC,cAFb,EAHF;;;AAQbC,IAAAA,SAAS,EAAE;AACTL,MAAAA,IAAI,EAAEM,+BADG;AAETJ,MAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACI,UAFjB,EARE;;;AAabC,IAAAA,SAAS,EAAE;AACTR,MAAAA,IAAI,EAAEM,+BADG;AAETJ,MAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACM,UAFjB,EAbE;;;AAkBbC,IAAAA,WAAW,EAAE;AACXV,MAAAA,IAAI,EAAEC,qBADK;AAEXC,MAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACQ,YAFf,EAlBA;;;AAuBbC,IAAAA,aAAa,EAAE;AACbZ,MAAAA,IAAI,EAAEC,qBADO;AAEbC,MAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACU,eAFb,EAvBF;;;AA4BbC,IAAAA,gBAAgB,EAAE;AAChBd,MAAAA,IAAI,EAAEe,mBADU;AAEhBb,MAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACa,kBAFV,EA5BL,EAAP,CAHwC,EAAtB,CAArB,C","sourcesContent":["/* @flow */\n\nimport { GraphQLObjectType, GraphQLFloat , GraphQLInt } from 'graphql';\nimport { GraphQLDateTime } from 'graphql-iso-date';\n\nimport { globalIdField } from 'graphql-relay';\nimport { nodeInterface } from './node';\n\nexport const PropertyType = new GraphQLObjectType({\n  name: 'Property',\n  interfaces: () => [nodeInterface],\n  fields: () => ({\n    id: globalIdField(),\n\n    livingSurface: {\n      type: GraphQLFloat,\n      resolve: parent => parent.living_surface,\n    },\n\n    createdAt: {\n      type: GraphQLDateTime,\n      resolve: parent => parent.created_at,\n    },\n\n    updatedAt: {\n      type: GraphQLDateTime,\n      resolve: parent => parent.updated_at,\n    },\n\n    landSurface: {\n      type: GraphQLFloat,\n      resolve: parent => parent.land_surface,\n    },\n\n    numberOfRooms: {\n      type: GraphQLFloat,\n      resolve: parent => parent.number_of_rooms,\n    },\n    \n    numberOfParkings: {\n      type: GraphQLInt,\n      resolve: parent => parent.number_of_parkings,\n    },\n\n  }),\n});\n"]}