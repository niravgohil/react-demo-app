{"version":3,"sources":["../../../src/schema/property/resolveList.js"],"names":["resolveList","resolve","root","args","ctx","query","table","cursorToOffset","defaultSortBy","dbQuery","orderBy"],"mappings":";;;AAGA;;;;;;AAMO,MAAMA,WAAW,GAAG,eAAeC,OAAf;AACzBC,IADyB;AAEzBC,IAFyB;AAGzBC,GAHyB;AAIzB;AACA,QAAM,EAAEC,KAAF,KAAY,gCAAa;AAC7BD,IAAAA,GAD6B;AAE7BD,IAAAA,IAF6B;AAG7BG,IAAAA,KAAK,EAAE,YAHsB;AAI7BC,IAAAA,cAAc,EAAdA,4BAJ6B;AAK7BC,IAAAA,aAAa,EAAE,CAAC,EAAEH,KAAK,EAAEI,OAAT,EAAD,KAAwB;AACrCA,MAAAA,OAAO,CAACC,OAAR,CAAgB,uBAAhB,EAAyC,MAAzC;AACD,KAP4B,EAAb,CAAlB;;;AAUA,SAAO,wCAAoB,MAAML,KAA1B,GAAiCF,IAAjC,CAAP;AACD,CAhBM,C","sourcesContent":["// @flow\n\nimport { type Context } from '../../Context.js';\nimport {\n  queryBuilder,\n  connectionFromArray,\n  cursorToOffset,\n} from '../queryBuilder';\n\nexport const resolveList = async function resolve(\n  root: any,\n  args: any,\n  ctx: Context,\n) {\n  const { query } = queryBuilder({\n    ctx,\n    args,\n    table: 'properties',\n    cursorToOffset,\n    defaultSortBy: ({ query: dbQuery }) => {\n      dbQuery.orderBy('properties.created_at', 'desc');\n    },\n  });\n\n  return connectionFromArray(await query, args);\n};\n"]}