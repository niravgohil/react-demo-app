{"version":3,"sources":["../src/server.js"],"names":["port","process","env","PORT","server","app","listen","console","log","handleExit","options","err","cleanup","actions","close","db","destroy","forEach","i","length","exit","error","on","bind"],"mappings":";;;AAGA;AACA;AACA,oD,8FAJA;;AAMA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,MAAMC,MAAM,GAAGC,aAAIC,MAAJ,CAAWN,IAAX,EAAiB,MAAM;AACpCO,EAAAA,OAAO,CAACC,GAAR,CAAa,wCAAuCR,IAAK,GAAzD;AACD,CAFc,CAAf;;AAIA,SAASS,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkC;AAChC,MAAID,OAAO,CAACE,OAAZ,EAAqB;AACnB,UAAMC,OAAO,GAAG,CAACT,MAAM,CAACU,KAAR,EAAeC,aAAGC,OAAlB,CAAhB;AACAH,IAAAA,OAAO,CAACI,OAAR,CAAgB,CAACH,KAAD,EAAQI,CAAR,KAAc;AAC5B,UAAI;AACFJ,QAAAA,KAAK,CAAC,MAAM;AACV,cAAII,CAAC,KAAKL,OAAO,CAACM,MAAR,GAAiB,CAA3B,EAA8BlB,OAAO,CAACmB,IAAR;AAC/B,SAFI,CAAL;AAGD,OAJD,CAIE,OAAOT,GAAP,EAAY;AACZ,YAAIO,CAAC,KAAKL,OAAO,CAACM,MAAR,GAAiB,CAA3B,EAA8BlB,OAAO,CAACmB,IAAR;AAC/B;AACF,KARD;AASD;AACD,MAAIT,GAAJ,EAASJ,OAAO,CAACc,KAAR,CAAcV,GAAd;AACT,MAAID,OAAO,CAACU,IAAZ,EAAkBnB,OAAO,CAACmB,IAAR;AACnB;;AAEDnB,OAAO,CAACqB,EAAR,CAAW,MAAX,EAAmBb,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAsB,EAAEX,OAAO,EAAE,IAAX,EAAtB,CAAnB;AACAX,OAAO,CAACqB,EAAR,CAAW,QAAX,EAAqBb,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,IAAI,EAAE,IAAR,EAAtB,CAArB;AACAnB,OAAO,CAACqB,EAAR,CAAW,SAAX,EAAsBb,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,IAAI,EAAE,IAAR,EAAtB,CAAtB;AACAnB,OAAO,CAACqB,EAAR,CAAW,mBAAX,EAAgCb,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,IAAI,EAAE,IAAR,EAAtB,CAAhC,E;;AAEehB,M","sourcesContent":["/* @flow */\n/* eslint-disable no-console, no-shadow, import/first */\n\nimport './env';\nimport app from './app';\nimport db from './db_';\n\nconst port = process.env.PORT || 8080;\n\nconst server = app.listen(port, () => {\n  console.log(`API is listening on http://localhost:${port}/`);\n});\n\nfunction handleExit(options, err) {\n  if (options.cleanup) {\n    const actions = [server.close, db.destroy];\n    actions.forEach((close, i) => {\n      try {\n        close(() => {\n          if (i === actions.length - 1) process.exit();\n        });\n      } catch (err) {\n        if (i === actions.length - 1) process.exit();\n      }\n    });\n  }\n  if (err) console.error(err);\n  if (options.exit) process.exit();\n}\n\nprocess.on('exit', handleExit.bind(null, { cleanup: true }));\nprocess.on('SIGINT', handleExit.bind(null, { exit: true }));\nprocess.on('SIGTERM', handleExit.bind(null, { exit: true }));\nprocess.on('uncaughtException', handleExit.bind(null, { exit: true }));\n\nexport default server;\n"]}